#################################################################
# Execute an Automation via the Sandbox
#################################################################
- id: sandbox_test_1
  alias: Sandbox Test 1
  initial_state: true
  trigger:
  - platform: state
    entity_id: switch.momentary_sandbox_1
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.sandbox_testing
    state: 'on'
  action:
  - service: script.turn_on
    entity_id: script.morning_briefing
    data:
      variables:
        recipient: Art
        alexa_entity: media_player.office_echo
#
#################################################################
# Execute an Automation via the Sandbox
#################################################################
- id: sandbox_test_2
  alias: Sandbox Test 2
  initial_state: true
  trigger:
  - platform: state
    entity_id: switch.momentary_sandbox_2
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.sandbox_testing
    state: 'on'
  action:
  - service: script.turn_on
    entity_id: script.morning_briefing
    data:
      variables:
        recipient: Steff
        alexa_entity: media_player.office_echo
#
#################################################################
# Execute an Automation via the Sandbox
#################################################################
- id: sandbox_test_3
  alias: Sandbox Test 3
  initial_state: true
  trigger:
  - platform: state
    entity_id: switch.momentary_sandbox_3
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.sandbox_testing
    state: 'on'
  action:
  - service: script.turn_on
    entity_id: script.set_alexa_volume
    data:
      variables:
        alexa_entity: media_player.office_echo
  - delay: '00:00:03'
  - service: script.turn_on
    entity_id: script.announce_evening_briefing
    data:
      variables:
        alexa_entity: media_player.office_echo
  - delay: '00:00:03'
  - service: script.turn_on
    entity_id: script.evening_briefing
    data:
      variables:
        recipient: "{{ states('sensor.briefing_recipient') }}"
        alexa_entity: media_player.office_echo
#
#################################################################
# Execute an Automation via the Sandbox
#################################################################
- id: sandbox_test_4
  alias: Sandbox Test 4
  initial_state: true
  trigger:
  - platform: state
    entity_id: switch.momentary_sandbox_4
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.sandbox_testing
    state: 'on'
  action:
  - service: notify.alexa_media_all_echo_dots
    data:
      target:
        - media_player.kitchen_echo
        - media_player.office_echo
      data:
        type: tts
        method: speak
      message: "This is a GROUP test."
#  - service: notify.mobile_group_art_steff
#    data:
#      message: 'Notification text'
#      data:
#        push:
#          sound: "US-EN-Morgan-Freeman-Roommate-Is-Arriving.wav"
  - service: script.sonos_say
    data:
      sonos_entity: media_player.sunroom_sonos
      volume: 0.4
      message: "This is a GROUP test."
      delay: '00:00:05'


  # - service: script.set_alexa_volume
  #   data:
  #     alexa_entity: group.all_echo_dots
  # # Make Announcement
  # - service: input_boolean.turn_on
  #   entity_id: input_boolean.alexa_speaking
  # - service: notify.alexa_media
  #   data:
  #     target:
  #       - media_player.kitchen_echo
  #       - media_player.office_echo
  #     data:
  #       type: tts
  #       method: speak
  #     message: "This is just a test."
  # - delay: '00:00:05'
  # - service: input_boolean.turn_off
  #   entity_id: input_boolean.alexa_speaking

#  - service: script.turn_on
#    entity_id: script.update_tstats_script
#
#################################################################
# Write to Log via Automation Test
#################################################################
# Sun Elevation as a trigger will fire every minute.
# Not really a good trigger entity.
#- id: sun_elevation_trigger_test
#  alias: Sun Elevation Trigger Test
#  initial_state: true
#  trigger:
#  - platform: state
#    entity_id: sensor.sun_elevation
#  action:
#  - service: script.write_to_log
#    data:
#      entity_id: script.write_to_log
#      message: 'Sun Elevation Automation triggered'
#
#################################################################
# Write to Log via Automation Test
#################################################################
#- id: q_30_min_trigger_test
#  alias: Q 30 min Trigger Test
#  initial_state: true
#  trigger:
#  - platform: time_pattern
#    minutes: /30
#  action:
#  - service: script.write_to_log
#    data:
#      entity_id: script.write_to_log
#      message: 'Q 30 Min Automation triggered'
#
#
#
#- alias: 'Notifications Test'
#  initial_state: true
#  trigger:
#  - platform: state
#    entity_id: switch.momentary_sandbox_run
#    to: 'on'
#  condition:
#  - condition: state
#    entity_id: input_boolean.sandbox_testing
#    state: 'on'
#  action:
#
#  - service: notify.mobile_group_art_only
#    data:
#      message: "Arrived Home"
#      data:
#        push:
#          category: "arrived"
#
# ----------------------------------
# -- NON WORKING VERSION !!!
#  - service: notify.alexa_media
#    data:
#      entity_id: media_player.office_echo
#      message: "Hello World"
# ----------------------------------
# -- Working Simply TTS
#  - service: notify.alexa_media
#    data_template:
#      target:
#        - media_player.office_echo
#      data:
#        type: tts
##      message: "{{ trigger.to_state.attributes.friendly_name }}."
#      message: "Hello World"
# -- Working Simply TTS with Tone alert
#  - service: notify.alexa_media
#    data:
#      target:
#        - media_player.office_echo
#      data:
#        type: announce
#        #method: all
#      message: "Hello World"
# -- Working Pust Notication to both Art & Steffs phones
#  - service: notify.alexa_media
#    data:
#      target:
#        - media_player.office_echo
#      data:
#        type: push
#      title: "I just wanted to say"
#      message: "Hello World"
# ----------------------------------
##  - delay: 0:00:02
##  - service: input_boolean.turn_off
##    entity_id: input_boolean.trigger_sandbox
#
