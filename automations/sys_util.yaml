#################################################################
## System/Utility Automations
#################################################################
#
#############################################################
#   Restart Home Assistant Daily at 0030
#############################################################
#
- id: restart_home_assistant
  alias: Restart Home Assistant
  initial_state: true
  trigger:
  - platform: time
    at: '00:30:00'
  condition:
  - condition: state
    entity_id: input_boolean.scheduled_reboots
    state: 'on'
  - condition: time
    weekday:
    - sat
  - condition: template
    value_template: "{% if ((states.sensor.uptime.state) | float) > 2 %}True{% else %}False{% endif %}"
  action:
  - service: persistent_notification.create
    data_template:
      title: "Home Assistant Restarted"
      message: >-
        At {{now().strftime("%m/%d/%Y %H:%M:%S")}}.
  - delay: '00:00:15'
  - service: homeassistant.restart
#
#############################################################
#   Home Assistant Startup
#############################################################
#
- id: home_assistant_startup
  alias: Home Assistant Startup
  initial_state: true
#  hide_entity: true
  trigger:
    platform: homeassistant
    event: start
  condition:
  - condition: time
    after: '00:30:00'
    before: '00:40:00'
  action:
  - service: persistent_notification.create
    data_template:
      title: "Home Assistant Startup"
      message: >-
        At {{now().strftime("%m/%d/%Y %H:%M:%S")}} Home Assistant has started.
#
#############################################################
#   Home Assistant Unscheduled Restart
#############################################################
#
- id: home_assistant_unscheduled_restart
  alias: Home Assistant Unscheduled Restart
  initial_state: true
#  hide_entity: true
  trigger:
    platform: homeassistant
    event: start
  condition:
  - condition: time
    after: '01:00:00'
    before: '23:59:50'
  action:
  - service: switch.turn_on
    entity_id: switch.momentary_unscheduled_restart
  - service: persistent_notification.create
    data_template:
      title: "Home Assistant Unscheduled Restart"
      message: >-
        At {{now().strftime("%m/%d/%Y %H:%M:%S")}} Home Assistant has restarted.
  - service: notify.lg_tv
    data:
      title: "HomeAssistant Startup"
      message: "Home Assistant has started."
  - condition: state
    entity_id: input_boolean.system_alerts
    state: 'on'
  - condition: time
    after: '06:00:00'
    before: '23:30:00'
  - service: notify.mobile_group_art_only
    data:
      title: "Home Assistant Restarted"
      message: "Home Assistant unscheduled restarted."
#
#############################################################
#   MONITOR DOWNLOAD SPEED
#############################################################
#
- id: download_speed
  alias: Download Speed
  initial_state: true
  trigger:
  - platform: numeric_state
    entity_id: sensor.speedtest_download
    below: 30
  action:
  - service: persistent_notification.create
    data_template:
      title: "Internet Speed Alert"
      message: >-
        At {{now().strftime("%m/%d/%Y %H:%M:%S")}} the download speed has dropped below 30 Mbit/s.
  - condition: state
    entity_id: input_boolean.system_alerts
    state: 'on'
  - service: notify.mobile_group_art_only
    data:
      title: "Internet Speed Alert"
      message: "Download speed has dropped below 30 Mbit/s."
#
#############################################################
#             Nightly Hass.io Snapshot                      #
#############################################################
#                [Validated 12/22/2018 - v 84.5]            #
#
#- id: hassio_snapshot
#  alias: Hassio Snapshot
#  initial_state: true
#  trigger:
#  - platform: time
#    at: '03:00:00'
#  condition:
#  - condition: time
#    weekday:
#      - sun
#      - wed
#  - condition: state
#    entity_id: input_boolean.hass_io_autobackup
#    state: 'on'
#  action:
#  - service: hassio.snapshot_full
#    data_template:
#      name: Automated Backup {{ now().strftime('%Y-%m-%d') }}
#  - delay: '00:30:00'
#  - condition: state
#    entity_id: input_boolean.system_alerts
#    state: 'on'
#  - service:  notify.mobile_group_art_only
#    data_template:
#      title: "New Hass.io Snaphot"
#      message: "Backup is named 'Automated Backup {{ now().strftime('%Y-%m-%d') }}'"
#
#############################################################
#   Notify if High Data Useage (>10Mb/Day)
#############################################################
#
- id: notify_if_high_data_useage
  alias: Notify If High Data Useage
#  initial_state: true
  trigger:
  - platform: template
    value_template: >-
      {% if ((states('sensor.xfinity_usage')|int)/(states('sensor.day_of_the_month')|int)) > (900 / (states('sensor.days_in_current_month')|int)) %}
         True
      {% endif %}
  action:
  - service: persistent_notification.create
    data_template:
      title: Xfinity Data Useage Alert
      message: >-
        {{now().strftime("%m/%d/%Y %H:%M:%S")}}<br />
        Total used is {{states('sensor.xfinity_usage')}} Gb<br />
  - condition: state
    entity_id: input_boolean.system_alerts
    state: 'on'
  - condition: template
    # Only run if more than 6 hours (21,600 sec) since it last ran
    value_template: '{{(as_timestamp(now()) - as_timestamp(state_attr("automation.notify_if_high_data_useage", "last_triggered") | default(0)) | int > 14400 )}}'
  - service:  notify.mobile_group_art_steff
    data_template:
      message: >-
        Xfinity Data useage alert! 
        {{now().strftime("%m/%d/%Y %H:%M:%S")}} 
        Total used is {{states('sensor.xfinity_usage')}} Gb
#
#       "{{ states('sensor.xfinity_usage')|int > (states('sensor.day_of_the_month')|int) * 10 }}"
#############################################################
#   NOTIFY IF IP CHANGES
#############################################################
#
- id: notify_of_new_external_ip
  alias: Notify Of New External IP
#  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.external_ip
  condition:
  - condition: template
    value_template: "{% if trigger.from_state and trigger.to_state %} True {% else %} False {% endif %}"
  action:
  - condition: state
    entity_id: input_boolean.system_alerts
    state: 'on'
  - service: persistent_notification.create
    data_template:
      title: "New IP Address"
      message: >
        "Your External IP changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}"
  - service:  notify.mobile_group_art_only
    data_template:
      title: "IP Address Changed"
      message: "Your External IP changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}"
#
#############################################################
#   Notify if New Device on Network
#############################################################
#
- id: notify_if_new_devices
  alias: Notify If New Devices
#  initial_state: true
  trigger:
  - platform: event
    event_type: device_tracker_new_device
  action:
  - service: persistent_notification.create
    data_template:
      title: New device
      message: >
        New device:<br />
        {{trigger.event.data.host_name}}<br />
        ({{trigger.event.data.entity_id}})<br />
        Mac: {{trigger.event.data.mac}}
#        New device:
#        {{trigger.event.data.entity_id}}
  - condition: state
    entity_id: input_boolean.system_alerts
    state: 'on'
  - service:  notify.mobile_group_art_only
    data_template:
      title: "New Device"
      message: "A new device was detected on the network."
#
##########################################################
## Notify if wifi device goes offline
##########################################################
#
- id: a_device_goes_offline
  alias: A Device goes Offline
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.ping_cloud_key
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.ping_xfinity_router
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.ping_vera_secure
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.ping_sonos_connect
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.ping_sunroom_sonos
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.ping_bedroom_sonos
      to: 'off'
      for:
        minutes: 10
##    - platform: state
##      entity_id: binary_sensor.ping_sleep_number_bed
##      to: 'off'
##      for:
##        minutes: 10
    - platform: state
      entity_id: binary_sensor.ping_rachio_controller
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.ping_flux_led_lightstrip
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.lifx_porch
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.lifx_tv_left
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.lifx_tv_right
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.lifx_garage_east
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.lifx_garage_center
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.lifx_garage_west
      to: 'off'
      for:
        minutes: 10
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {% if states.automation.a_device_goes_offline.last_triggered is not none %}
            {% if as_timestamp(now()) | int - as_timestamp(states.automation.a_device_goes_offline.attributes.last_triggered) | int > 3600 %} true {% else %} false
            {% endif %}
          {% else %}
          false
          {% endif %}
  action:
  - service: persistent_notification.create
    data_template:
      title: "Device Offline"
      message: >-
        At {{now().strftime("%m/%d/%Y %H:%M:%S")}} {{trigger.to_state.attributes.friendly_name}} has gone offline..
  - condition: state
    entity_id: input_boolean.system_alerts
    state: 'on'
  - service:  notify.mobile_group_art_only
    data_template:
      title: "Device Offline"
      message: "{{trigger.to_state.attributes.friendly_name}} has gone offline."
#
##########################################################
## Notify if wifi device goes offline
##########################################################
#
- id: a_critical_device_goes_offline
  alias: A Critical Device goes Offline
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.ping_cloud_key
      to: 'off'
      for:
        minutes: 5
    - platform: state
      entity_id: binary_sensor.ping_xfinity_router
      to: 'off'
      for:
        minutes: 5
  action:
  - service:  notify.mobile_group_art_steff
    data_template:
      title: "Device Offline"
      message: >-
        {{trigger.to_state.attributes.friendly_name}} has gone offline.<br />
        Check the panel box for a tripped fuse!!

#################################################################
# Refresh date countdown sensors
#################################################################
#- alias: Reminder - Refresh date countdown sensors
#  initial_state: true
#  trigger:
#    - platform: homeassistant
#      event: start
#  action:
#    - service: python_script.date_countdown
#      data:
#        name: Art
#        type: birthday
#        date: 4/16/1959
#    - service: python_script.date_countdown
#      data:
#        name: Steff
#        type: birthday
#        date: 9/20/1953
#    - service: python_script.date_countdown
#      data:
#        name: Our wedding
#        type: anniversary
#        date: 9/18/1982
#
