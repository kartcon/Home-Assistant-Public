#################################################################
## Scheduled Event Automations
#################################################################
#
#########################################################
#      NOTIFY IF ITS A HOLIDAY OR BIRTHDAY              #
#########################################################
- id: holiday_and_birthday_notification
  alias: 'Holiday and Birthday Notification'
#  hide_entity: false
  initial_state: true
  trigger:
    - platform: state
      entity_id:
        - sensor.todays_events
  condition:
    - condition: template
      value_template: "{{ states('sensor.todays_events') != 'unknown' }}"
    - condition: template
      value_template: "{{ states.sensor.todays_events.state | trim != '' }}"
  action:
  - service: persistent_notification.create
    data_template:
      title: '{{ states.sensor.todays_events.state }}'
      message: >-
        Today is {{ states.sensor.todays_events.state }}.
  - service: notify.mobile_group_art_steff
    data_template:
      title: '{{ states.sensor.todays_events.state }}'
      message: 'Today is {{ states.sensor.todays_events.state }}.'
#
#############################################################
#  Trash Day - Every Wednesday, Notify Tuesday at sunset
#############################################################
- id: take_out_the_trash
  alias: 'Take out the trash'
  initial_state: true
  trigger:
  - platform: sun
    event: sunset
#  - platform: homeassistant
#    event: start
  condition:
    condition: time
    weekday:
      - tue
  action:
  # Set Volume
#  - service: script.set_alexa_volume
#    data:
#      alexa_entity: group.all_echo_dots
  # Make Announcement
  - service: input_boolean.turn_on
    entity_id: input_boolean.alexa_speaking
#  - service: notify.alexa_media
#    data:
#      target:
#        - media_player.kitchen_echo
##        - media_player.office_echo
#      data:
#        type: tts
#        method: speak
#      message: "Trash pick-up is tomorrow. Remember to put the container out to the road."
#
  - service: notify.alexa_media_all_echo_dots
    data:
      target:
        - media_player.kitchen_echo
        - media_player.office_echo
      data:
        type: announce
      message: >-
        Trash pick-up is tomorrow. Remember to put the container out to the road.
#
#  - service: notify.alexa_media
#    data_template:
#      target:
#        - media_player.kitchen_echo
#      data:
#        type: announce
#      message: >-
#        Trash pick-up is tomorrow. Remember to put the container out to the road.
#
  - service: script.sonos_say
    data:
      sonos_entity: media_player.sunroom_sonos
      volume: 0.4
      message: "Trash pick-up is tomorrow. Remember to put the container out to the road."
      delay: '00:00:05'
  - condition: state
    entity_id: input_boolean.system_alerts
    state: 'on'
  - service: notify.mobile_group_art_steff
    data:
      message: "Reminder: Take out the Trash."
  - delay: '00:00:05'
  - service: input_boolean.turn_off
    entity_id: input_boolean.alexa_speaking
  - service: script.turn_on
    entity_id: script.blink_tv_lights
  - delay: 0:00:03
  - service: notify.lg_tv
    data:
      title: "Reminder"
      message: "Trash pick-up is tomorrow."
#
#############################################################
#  Recycling - Every other Monday, Notify Sunday at sunset
#############################################################
- id: take_out_the_recycling
  alias: 'Take out the recycling'
  initial_state: true
  trigger:
  - platform: sun
    event: sunset
#  - platform: homeassistant
#    event: start
  condition:
    - condition: time
      weekday:
        - sun
    - condition: state
      entity_id: sensor.week_odd_even
      state: 'Even Week'
  action:
  # Set Volume
#  - service: script.set_alexa_volume
#    data:
#      alexa_entity: group.all_echo_dots
  # Make Announcement
  - service: input_boolean.turn_on
    entity_id: input_boolean.alexa_speaking
#  - service: notify.alexa_media
#    data:
#      target:
#        - media_player.kitchen_echo
##        - media_player.office_echo
#      data:
#        type: tts
#        method: speak
#      message: "Recycling pick-up is tomorrow. Remember to put the container out to the road."
#
  - service: notify.alexa_media_all_echo_dots
    data:
      target:
        - media_player.kitchen_echo
        - media_player.office_echo
      data:
        type: announce
      message: >-
        Recycling pick-up is tomorrow. Remember to put the container out to the road.
#
#  - service: notify.alexa_media
#    data_template:
#      target:
#        - media_player.kitchen_echo
#      data:
#        type: announce
#      message: >-
#        Recycling pick-up is tomorrow. Remember to put the container out to the road.
#
  - service: script.sonos_say
    data:
      sonos_entity: media_player.sunroom_black_sonos
      volume: 0.4
      message: "Recycling pick-up is tomorrow. Remember to put the container out to the road."
      delay: '00:00:05'
#  - service: input_datetime.set_datetime
#    data_template:
#      entity_id: input_datetime.recycle_alert_date
#      date: '{{ (as_timestamp(now()) + (14*24*3600)) | timestamp_custom("%Y-%m-%d", True) }}'
#  - service: input_datetime.set_datetime
#    data_template:
#      entity_id: input_datetime.recycle_pickup_date
#      date: '{{ (as_timestamp(now()) + (15*24*3600)) | timestamp_custom("%Y-%m-%d", True) }}'
  - delay: '00:00:05'
  - service: input_boolean.turn_off
    entity_id: input_boolean.alexa_speaking
  - service: script.turn_on
    entity_id: script.blink_tv_lights
  - delay: 0:00:03
  - service: notify.lg_tv
    data:
      title: "Reminder"
      message: "Recycling pick-up is tomorrow."
  - condition: state
    entity_id: input_boolean.system_alerts
    state: 'on'
  - service: notify.mobile_group_art_steff
    data:
      message: "Reminder: Take out the recycling."
#
#############################################################
#  Change Furnace Filter
#############################################################
- id: change_furnace_filter
  alias: 'Change Furnace Filter'
  initial_state: true
  trigger:
  - platform: sun
    event: sunrise
#  - platform: homeassistant
#    event: start
  condition:
  - condition: time
    weekday:
    - sat
  - condition: numeric_state
    entity_id: sensor.day_of_the_month
    below: 8
  action:
  - service: persistent_notification.create
    data_template:
      title: 'Remember to change the furnace filter.'
      message: >-
        It's the first Saturday of the month. Remember to change the furnace filter.
#
#############################################################
#  Announce Upcoming Space Launch
#############################################################
- id: upcoming_space_launch
  alias: 'Upcoming Space Launch'
  initial_state: true
  trigger:
  - platform: template
    value_template: >
      {% if (states('sensor.time') == states('sensor.next_launch_reminder')) and (states('sensor.date') == states('sensor.next_launch_date')) %}
        True
      {% else %}
        False
      {% endif %}
  condition:
    condition: time
    after: '08:00:00'
    before: '23:00:00'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.alexa_speaking
  - service: notify.alexa_media
    data:
      target:
        - media_player.kitchen_echo
      data:
        type: tts
        method: speak
      message: "Upcoming Rocket Launch in 5 minutes. Launch scheduled for liftoff at {{ (as_timestamp(state_attr('sensor.space_launches', 'launch_time'))) | timestamp_custom('%-I:%M %p') }}."
  - delay: '00:00:05'
  - service: input_boolean.turn_off
    entity_id: input_boolean.alexa_speaking
#
#      {% if (states('sensor.time') == (as_timestamp(state_attr('sensor.space_launches', 'launch_time'))-300) | 
# timestamp_custom('%-H:%M')) and (states('sensor.date') == (state_attr('sensor.space_launches', 
# 'launch_time').split('T')[0].strip())) %}
